name: Build (CI)

on:
  pull_request:
    branches: [main]
    types: [opened, synchronize, closed]
  push:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [14.x, 16.x, 17.x]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Determine pnpm Cache Path
        id: pnpm-cache-dir-path
        run: echo "::set-output name=dir::$(pnpm cache dir)"

      - uses: actions/cache@v4
        id: pnpm-cache # use this to check for `cache-hit` (`steps.pnpm-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.pnpm-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm.lock') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install Packages
        run: pnpm install --frozen-lockfile

      - name: Build
        run: pnpm build
        env:
          CI: true

      - name: Test
        run: pnpm run test:ci
        env:
          CI: true
